name: "CI"

concurrency:
    cancel-in-progress: true
    group: ${{github.workflow}}-${{github.ref}}

env:
    FOUNDRY_PROFILE: "ci"
    # API_KEY_ALCHEMY: ${{ secrets.API_KEY_ALCHEMY }}
    # API_KEY_ETHERSCAN: ${{ secrets.API_KEY_ETHERSCAN }}
    # API_KEY_INFURA: ${{ secrets.API_KEY_INFURA }}
    # MNEMONIC: ${{ secrets.MNEMONIC }}

on:
    workflow_dispatch:
    pull_request:
    push:
        branches:
            - "main"

jobs:
    lint:
        runs-on: "ubuntu-latest"
        steps:
            - name: "Check out the repo"
              uses: "actions/checkout@v3"
              with:
                  submodules: "recursive"

            - name: "Install Foundry"
              uses: "foundry-rs/foundry-toolchain@v1"

            - name: "Install Pnpm"
              uses: "pnpm/action-setup@v2"
              with:
                  version: "8"

            - name: "Install Node.js"
              uses: "actions/setup-node@v3"
              with:
                  cache: "pnpm"
                  node-version: "lts/*"

            - name: "Install the Node.js dependencies"
              run: "pnpm install"

            - name: "Lint the contracts"
              run: "pnpm lint"

            - name: "Add lint summary"
              run: |
                  echo "## Lint result" >> $GITHUB_STEP_SUMMARY
                  echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

    build:
        runs-on: "ubuntu-latest"
        steps:
            - name: "Check out the repo"
              uses: "actions/checkout@v3"
              with:
                  submodules: "recursive"

            - name: "Install Foundry"
              uses: "foundry-rs/foundry-toolchain@v1"

            - name: "Show the Foundry config"
              run: "forge config"

            - name: "Build the test contracts and print their size"
              run: "FOUNDRY_PROFILE=test-optimized forge build --sizes"

            - name: "Add build summary"
              run: |
                  echo "## Build result" >> $GITHUB_STEP_SUMMARY
                  echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

    test:
        needs: ["lint", "build"]
        runs-on: "ubuntu-latest"
        steps:
            - name: "Check out the repo"
              uses: "actions/checkout@v3"
              with:
                  submodules: "recursive"

            - name: "Install Foundry"
              uses: "foundry-rs/foundry-toolchain@v1"

            - name: "Show the Foundry config"
              run: "forge config"

            - name: "Generate a fuzz seed that changes weekly to avoid burning through RPC allowance"
              run: >
                  echo "FOUNDRY_FUZZ_SEED=$(
                    echo $(($EPOCHSECONDS - $EPOCHSECONDS % 604800))
                  )" >> $GITHUB_ENV

            - name: "Run the tests"
              run: "forge test"

            - name: "Add test summary"
              run: |
                  echo "## Tests result" >> $GITHUB_STEP_SUMMARY
                  echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

    coverage:
        needs: ["lint", "build"]
        runs-on: "ubuntu-latest"
        steps:
            - name: "Check out the repo"
              uses: "actions/checkout@v3"
              with:
                  submodules: "recursive"

            - name: "Install Foundry"
              uses: "foundry-rs/foundry-toolchain@v1"

            - name: "Generate the coverage report using the unit and the integration tests"
              run: 'forge coverage --match-path "tests/{unit,integration}/**/*.sol" --report lcov'

            - name: "Upload coverage report to Codecov"
              uses: "codecov/codecov-action@v3"
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
              with:
                  files: "./lcov.info"

            - name: "Add coverage summary"
              run: |
                  echo "## Coverage result" >> $GITHUB_STEP_SUMMARY
                  echo "✅ Uploaded to Codecov" >> $GITHUB_STEP_SUMMARY
